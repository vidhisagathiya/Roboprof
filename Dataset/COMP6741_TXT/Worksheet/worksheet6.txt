COMP474/6741 Intelligent Systems (Winter 2024)Worksheet #6: Intelligent AgentsTask 1. What kind of question would you expect a Concordia Chatbot to be able to handle?1. For new students (not currently registered at Concordia):•••2. For current students (already enrolled at Concordia):•••Task 2. Write a regular expression that matches different variations of naming https://www.wikidata.org/wiki/Q326342: “Concordia”, “Concordia U.”, “CU”, “Concordia University”, “UniversitéConcordia”, . . . :Test it at https://regex101.com/Task 3. Suppose we want to use an existing set of 1000 questions for training a ML classifier. If weuse tf-idf vectors to represent each question, how many dimensions will the vectors have (make a roughestimate)?Task 4. Ok, here is an (extremely simplified) idea of creating 2D feature vectors out of a naturallanguage question: The first dimension a encodes the first occurrence of a question word (see tablebelow) and the second dimension b the number of Capital Letters in the sentence:Contains? ValueWho 1What 2Where 3(none) 0# Question a b Class1 Where is Concordia? Location2 Who was Steve Jobs? Definition3 What city is McGill in? Location4 What is NLP? DefinitionTask 5. Using the online parser at https://corenlp.run/, create a parse tree for the sentence What isÏMcGill?. Note that you can now extract the subject of the sentence, e.g., to plug it into a SPARQLquery.Task 6. Now apply the kNN classification algorithm on the new question below to classify its type, ac-cording to the training data from Task 4. Use k = 3 and the Euclidian distance d(~p, ~q) =√∑ni=1(pi − qi)2:# Question a b d-Q1 d-Q2 d-Q3 d-Q4 Class?5 What is McGill?You can now match the new question with a corresponding SPARQL template to obtain a query foryour knowledge graph, filling in variables with the values extracted from the question.https://www.wikidata.org/wiki/Q326342https://www.wikidata.org/wiki/Q326342https://regex101.com/https://corenlp.run/COMP474/6741 Worksheet: Intelligent Agents Winter 2024Task 7. Now define a SPARQL template that can obtain information about a person from DBpedia.ÏTo keep it simple, for now we assume that the name extracted via NLP from the question is identical tothe full name stored in the (English) label field for the subject (e.g., “Steve Jobs”).PREFIX dbr: <http://dbpedia.org/resource/>SELECT . . .WHERE {. . .}Task 8. Create a competency question and a corresponding SPARQL query for our FOCU universityexample:Testing query for this question:SELECT . . .WHERE {. . .}Task 9. An early, well-known commercial service for semantic annotation of textual (mostly news)Ïdocuments was Thompson Reuter’s OpenCalais, which has since been spun out and re-branded asLSEG Data & Analytics PermID (formerly Refinitif Intelligent Tagging): Try out the online demoat https://permid.org/tagging on a document, for example the first part of the Wikipedia article onConcordia. Look at the entities that were detected and go to the “RDF view”: what ID is given toConcordia in this knowledge graph?Hint: There is another tool at the top of the page, Entity Search, where you can cross-check yourentities.Task 10. Go to the DBpedia Spotlight online demo at https://demo.dbpedia-spotlight.org. Try analyzingÏa test document with some ambiguities, e.g, “Paris Hilton went to the Hilton in Paris.” Inspect theentities that were linked to DBpedia. Are they correct?Task 11. For the questions in Task 1 above, which of the chatbot techniques covered so far would beable to answer them?https://permid.org/tagginghttps://demo.dbpedia-spotlight.org