COMP474/6741 Intelligent Systems (Winter 2024)Worksheet #1: Knowledge GraphsThese are active learning exercises; work on them during the lecture in teams of two!Task 1. We start by modeling some university-related knowledge in form of a graph: (1) Joe studies atConcordia University; (2) Joe knows Jane; (3) Jane studies at McGill University. Draw the graph:Task 2. Let’s add some additional knowledge: (4) Joe’s email address is joe@example.com; (5)Concordia is located in Montreal; (6) McGill is located in Montreal. Add these to the graph above.Task 3. Graphs can be represented as triples (and vice versa), consisting of<subject> <predicate> <object>Write the triples corresponding to the first three statements above:1.2.3.Task 4. Here’s another triple: (Joe, is a, Person). Add it to the graph you drew in Task 1.Task 5. So far, we defined everything in terms of natural language. That’s not very useful for aÏknowledge base to be used in an intelligent system. Rather than writing “Concordia”, we will use a URIthat points to a machine-readable description in the RDF (Resource Description Framework) format.Using your phone or laptop, look up (our) Concordia University in the open knowledge base Wikidata(https://wikidata.org):1• URI:1What you see in your browser is actually a human-readable web page obtained through a 303 redirect (from /entity/...to /wiki/...), not the raw RDF data that would be consumed by a program (/entity/...). The returned file format isdetermined by the extension, e.g., https://www.wikidata.org/wiki/Special:EntityData/Q326342.rdf for raw RDF data.https://wikidata.orghttps://www.wikidata.org/wiki/Special:EntityData/Q326342.rdfCOMP474/6741 Worksheet: Knowledge Graphs Winter 2024Task 6. Ok, now let’s go back to the graph from Task 1. Replace the string “Concordia” with the URIyou obtained in the previous step in your graph above. Note: To obtain a complete RDF graph, you’dhave to continue replacing all subjects, predicates and objects (except literals) with URIs.Task 7. Wikidata contains (among other information) the link to Concordia’s website. Find theÏinformation and write it in form of a triple:•Now add this triple to the graph from Task 1.Task 8. What about our Joe and Jane? Unlike some famous persons, we will most likely not find themin Wikidata (or any other public knowledge graph). However, an organization might have them in theirown graph (for example, in Facebook, LinkedIn, or Concordia’s student database). For this example, wesimply name them with a URI like http://example.org/joe (likewise for Jane). How do we model thepredicate that Joe knows Jane in a machine-readable way? The details will be the topic of the nextlecture; for now simply use the URI http://xmlns.com/foaf/0.1/knows. Re-write the triple (2) fromTask 1 using three URIs:•Observe how an intelligent agent can now learn more about each part of this triple simply by resolvingthe URI and reading the RDF data retrieved through it.Task 9. Writing these full URIs (technically IRIs) is tiring (and uses up storage space). Using thefollowing prefixes:PREFIX foaf: <http://xmlns.com/foaf/0.1/>PREFIX user: <http://example.org/>re-write the triple from Task 8 using these namespaces:•Task 10. Given the knowledge graph you constructed, can an intelligent agent answer the question“Which city is Joe studying in?” If yes, how (explain, step-by-step, using your graph)? If no, why not?To learn more about the technical details of RDF, see the references provided in the lecture, in particularhttps://www.w3.org/TR/rdf11-primer/https://www.w3.org/TR/rdf11-primer/